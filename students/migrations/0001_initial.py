# Generated by Django 2.0.10 on 2019-04-03 19:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=0, verbose_name='Preference')),
            ],
        ),
        migrations.CreateModel(
            name='CreateGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grp_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='Group Name')),
            ],
        ),
        migrations.CreateModel(
            name='GroupRequest',
            fields=[
                ('rid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('message', models.CharField(default='sent you a request to be in their group', max_length=50, verbose_name='message')),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('pid', models.IntegerField(default=0, primary_key=True, serialize=False, verbose_name='Professor ID')),
                ('name', models.CharField(max_length=25, verbose_name='Name')),
                ('desg', models.CharField(max_length=25, verbose_name='Designation')),
                ('dept', models.CharField(choices=[('Electronics and Communication Engineering', 'Electronics and Communication Engineering'), ('Mechanical Engineering', 'Mechanical Engineering'), ('Computer Science and Engineering', 'Computer Science and Engineering'), ('Electrical Engineering', 'Electrical Engineering'), ('Production and Industrial Engineering', 'Production and Industrial Engineering'), ('Chemical Engineering', 'Chemical Engineering'), ('Civil Engineering', 'Civil Engineering'), ('Information Technology', 'Information Technology'), ('Biotechnology', 'Biotechnology')], max_length=50, verbose_name='Department')),
                ('aoi', models.CharField(max_length=30, verbose_name='Areas Of Interest')),
                ('group', models.IntegerField(default=0, verbose_name='Number of Groups')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=40, verbose_name="Student's Name")),
                ('FName', models.CharField(max_length=60, verbose_name="Father's Name")),
                ('Branch', models.CharField(choices=[('Electronics and Communication Engineering', 'Electronics and Communication Engineering'), ('Mechanical Engineering', 'Mechanical Engineering'), ('Computer Science and Engineering', 'Computer Science and Engineering'), ('Electrical Engineering', 'Electrical Engineering'), ('Production and Industrial Engineering', 'Production and Industrial Engineering'), ('Chemical Engineering', 'Chemical Engineering'), ('Civil Engineering', 'Civil Engineering'), ('Information Technology', 'Information Technology'), ('Biotechnology', 'Biotechnology')], max_length=100, verbose_name='Branch')),
                ('CPI', models.FloatField(default=0, verbose_name='CPI')),
                ('DOB', models.DateField(verbose_name='Date of Birth')),
                ('Category', models.CharField(choices=[('OPEN', 'Open'), ('OPEN-PWD', 'OPEN-PWD'), ('OBC', 'OBC'), ('OBC-PWD', 'OBC-PWD'), ('SC', 'SC'), ('SC-PWD', 'SC_PWD'), ('ST', 'ST'), ('ST-PWD', 'ST-PWD')], max_length=50, verbose_name='Category')),
                ('Semester', models.IntegerField(default=8, verbose_name='Semester')),
                ('leader', models.BooleanField(default=False, verbose_name='Leader')),
                ('choices_filled', models.BooleanField(default=False, verbose_name='Choices Filled')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group', verbose_name='Group')),
                ('reg_no', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Registration Number')),
            ],
        ),
        migrations.AddField(
            model_name='choice',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Professor'),
        ),
        migrations.AddField(
            model_name='choice',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student'),
        ),
    ]
